#!/usr/bin/env python
# -*- coding: utf-8 -*-
# @Author: Lcy
# @Date:   2016-09-20 15:34:41
# @Last Modified by:   Lcy
# @Last Modified time: 2016-09-26 17:38:36
import socket
#from lib.util import url2ip
import pymongo
import binascii


class Exploit:
    def __init__(self, target,expfile):
        self.target = target

        self.result = {
            "name": "Mongodb未授权访问",
            "author": "Lcy",
            "type": "website",
            "ref": "https://phpinfo.me",
            "status": False,
            "info": "",
            'filename': expfile,
            "target": target,
        }
    def check(self,ip, port, timeout):
        # from https://github.com/ysrc/xunfeng/blob/4f93adc8ffb4eb77e0f1fe19704cdf984485ccea/vulscan/vuldb/crack_mongo.py
        try:
            socket.setdefaulttimeout(timeout)
            s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
            s.connect((ip, int(port)))
            data = binascii.a2b_hex(
                "3a000000a741000000000000d40700000000000061646d696e2e24636d640000000000ffffffff130000001069736d6173746572000100000000")
            s.send(data)
            result = s.recv(1024)
            if "ismaster" in result:
                getlog_data = binascii.a2b_hex(
                    "480000000200000000000000d40700000000000061646d696e2e24636d6400000000000100000021000000026765744c6f670010000000737461727475705761726e696e67730000")
                s.send(getlog_data)
                result = s.recv(1024)
                if "totalLinesWritten" in result:
                    return True
        except Exception, e:
            pass

    def verify(self):
        try:
            #host = url2ip(self.target)
            host='122.0.0.1'
            port = 27017
            if self.check(host, port, timeout=5):
                self.result['status'] = True
                self.result['info'] = '% Mongo未授权访问' % self.target
        except Exception as e:
            print e
            pass